<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ShinyInfo.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>